---
description: 
globs: 
alwaysApply: true
---
# 🎬 Movie Streaming App – Project Rules & Architecture

## 🧱 Stack

- **React Native with Expo SDK (latest)**
- **NativeWind for styling (Tailwind-style)**
- **Web support** using Expo Web
- **TMDB API** for movie metadata
- **Vidfast.pro API** for streaming functionality
- **Cursor AI** will be used to scaffold, write, and extend the codebase.

---
### `tailwind.config.js`

- Configure NativeWind and Tailwind.
- Must include:
  - `presets: [require("nativewind/preset")]`
  - `content: ['./**/*.js', './**/*.jsx', './**/*.tsx']`

---

### `babel.config.js`

- Must include:
  - `'nativewind/babel'` in plugins
  - Optional: `{ jsxImportSource: 'nativewind' }` in presets if using `styled()` API

---

### `metro.config.js`

- Should be customized to support NativeWind if using Expo Web.
- Must include:
  - NativeWind babel transformer path override.

---
## 🧪 API Usage Rules

### TMDB API

- Use for all movie data (posters, titles, genres, overviews, etc.)
- Use custom hook (`useFetchMovies`) for API calls.
- All requests must include the TMDB API key from `.env`

### Vidfast.pro

- Use for movie playback via iframe or WebView
- Example URL: `https://vidfast.pro/embed/movie/{tmdb_id}`

## 🎬 IMDb ID Fetch Logic for Vidfast.pro Integration

### Goal:
To embed videos from [vidfast.pro](https://vidfast.pro), the app needs **IMDb IDs**. TMDB only provides **TMDB movie IDs** in search or list responses. Therefore, after retrieving the TMDB movie ID, make a second API request to get the IMDb ID.

---

### 📁 `/lib/tmdb.js`

```js
const TMDB_API_KEY = process.env.TMDB_API_KEY;

export const getImdbIdFromTmdbId = async (tmdbId) => {
  const res = await fetch(`https://api.themoviedb.org/3/movie/${tmdbId}/external_ids?api_key=${TMDB_API_KEY}`);
  const data = await res.json();
  return data.imdb_id;
};

---

## 🎨 Styling Rules (NativeWind)

- Use `className` ONLY (no `style={{}}`)
- Never use inline styles
- Follow Tailwind naming: `bg-gray-900`, `text-white`, `rounded-md`, etc.
- Use responsive classes for Web (e.g., `md:p-4`)
- Use VS Code Tailwind IntelliSense with classRegex:
  ```json
  "tailwindCSS.experimental.classRegex": [
    "className=\"([^\"]*)\""

  ]